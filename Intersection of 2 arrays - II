Problem:

Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Note:

Each element in the result should appear as many times as it shows in both arrays.
The result can be in any order.

Solution:

class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer, Integer> s = new HashMap<Integer, Integer>();
        List<Integer> ans = new ArrayList<Integer>();
    for (int j=0; j<nums1.length; j++)
    {
         s.put(j, nums1[j]);
    }
    
    for (int i=0; i<nums2.length; i++)
         if(s.containsValue(nums2[i]))
         {
             ans.add(nums2[i]);
             s.values().remove(nums2[i]);
        
         }
        
        int [] ints = ans.stream().mapToInt(Integer::intValue).toArray();
        return ints;
    }
}
