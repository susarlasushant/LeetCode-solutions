Problem:

Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 
Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pw

Solution:

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        String ls = "";
        int len = 0;
        
        ArrayList<Character> list = new ArrayList<Character>();
        for (char ch: s.toCharArray()) {
         
            if(list.contains(ch))
            {
                int id = list.indexOf(ch);
                for(int j=0;j<=id;j++)
                {
                    list.remove(0);
                }
            }
            
            list.add(ch);
            
            if(list.size()> len)
            {
                len = list.size();
            }
        }
        
        return len;
        
    }
}