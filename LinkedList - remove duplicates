Problem:

Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        
        List<Integer> ls = new ArrayList<Integer>();
        ListNode current = head;
        if(head == null)
        {
            return null;
        }
        ls.add(head.val);
        
        ListNode prev = head;
        head = head.next;
        
        while(head!=null)
        {
            if(ls.contains(head.val))
            {
                head = head.next;
                prev.next = head;
                
            }
            else
            {
                ls.add(head.val);
                prev = head;
                head = head.next;
            }
        }
        
        return current;
        
    }
}
