Problem:

Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.
Note: You may assume the string contain only lowercase letters.

Solution:

class Solution {
    public int firstUniqChar(String s) {
        String op = "";
        
        if(s.length() == 0)
        {
            return -1;
        }
        
        List<String> list = new ArrayList<String>();
        
        for(int i=0;i<s.length();i++)
        {
            if(!list.contains(s.charAt(i)+""))
            {
                op = op+s.charAt(i);    
                list.add(s.charAt(i)+"");
            }
            else
            {
                op = op.replace(s.charAt(i)+"","");
            }
        }
        if(op.length() == 0)
        {
            return -1;
        }
        return s.indexOf(op.charAt(0));
        
    }
}
